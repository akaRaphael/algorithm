# 1) Linked List란?
# - 일반적으로 Linked List는 Singly Linked List(단일 연결 리스트)를 의미한다. 
# - 연결 리스트는 하나의 노드에 데이터와 다음 데이터를 가리키는 포인터를 담는 형태의 리스트이다.
#   ex) [데이터, 포인터]
# - 연결 리스트는 배열과 동일하게 선형 자료구조이지만, 물리메모리 내부의 데이터 적재방식이 연속적이지 않다.
# - 포인터를 이용해 다음 데이터의 위치를 명시하므로 데이터 삽입/삭제에 있어서 배열의 O(n)보다 빠르다.
# - 데이터 삽입/삭제에 효율적인 반면, 이러한 특성 때문에 데이터 검색은 비효율적이다.
# - 첫 노드(head)를 시작으로 다음 데이터를 가리키는 포인터를 이용해 하나씩 탐색하기에, 
#   데이터 탐색에 있어서 O(n)의 시간복잡도가 걸린다.   

# 2) Linked List 장점 
# - 자료구조의 길이가 동적이다.
# - 데이터의 삽입/삭제에 용이하다. 

# 3) Linked List 단점 
# - 임의의 노드(데이터)에 바로 접근할 수 없다(탐색의 비효율성).
# - 다음 노드의 위치를 저장하기 위한 추가공간이 필요하다.
# - Cache Locality를 이용하여 근접 데이터를 미리 캐시에 저장하기 어렵다.
# - Linked List를 역방향으로 탐색하기 어렵다. 

# * Cache Locality란?
# - 자주 사용하는 데이터를 매번 물리메모리에서 가져오는 것(fetch)이 아니라, 
#   캐시메모리에 저장하여, 데이터의 접근성(접근속도)을 향상시키는 것 

# 4) Linked List의 종류 
# - Singly Linked List(단일연결리스트)
# - Doubly Linked List(이중연결리스트)
# - Circular Linked List(환형연결리스트)